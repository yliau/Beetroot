"use strict";function initMap(){var e={lat:49.062785,lng:33.4156805},o=new google.maps.Map(document.getElementById("map"),{center:e,zoom:15,scrollwheel:!1,styles:[{elementType:"geometry",stylers:[{color:"#c8c4da"}]},{elementType:"labels.icon",stylers:[{color:"#f3f8f7"},{visibility:"off"}]},{elementType:"labels.text.fill",stylers:[{color:"#616161"}]},{elementType:"labels.text.stroke",stylers:[{color:"#f5f5f5"}]},{featureType:"administrative.land_parcel",elementType:"labels.text.fill",stylers:[{color:"#b4aecc"},{weight:2.5}]},{featureType:"poi",elementType:"geometry",stylers:[{color:"#c8c4da"}]},{featureType:"poi",elementType:"labels.text.fill",stylers:[{color:"#757575"}]},{featureType:"poi.park",elementType:"geometry",stylers:[{color:"#c4c0d5"}]},{featureType:"poi.park",elementType:"labels.text.fill",stylers:[{color:"#c4c0d5"}]},{featureType:"road",elementType:"geometry",stylers:[{color:"#a49fae"}]},{featureType:"road.arterial",elementType:"labels.text.fill",stylers:[{color:"#757575"}]},{featureType:"road.highway",elementType:"geometry",stylers:[{color:"#e1cd7b"}]},{featureType:"road.highway",elementType:"geometry.stroke",stylers:[{color:"#c0a32c"}]},{featureType:"road.highway",elementType:"labels.text",stylers:[{color:"#f4d335"},{lightness:15},{weight:2.5}]},{featureType:"road.highway",elementType:"labels.text.fill",stylers:[{color:"#827240"}]},{featureType:"road.local",elementType:"labels.text.fill",stylers:[{color:"#9e9e9e"}]},{featureType:"transit.line",elementType:"geometry",stylers:[{color:"#e5e5e5"}]},{featureType:"transit.station",elementType:"geometry",stylers:[{color:"#c4c0d5"}]},{featureType:"water",elementType:"geometry",stylers:[{color:"#9eace5"}]},{featureType:"water",elementType:"labels.text.fill",stylers:[{color:"#9e9e9e"}]}]});new google.maps.Marker({map:o,position:e,icon:"img/map-marker.png"})}!function(e){e(function(){e(".team__slider").slick({slidesToScroll:1,infinite:!0,speed:300,slidesToShow:3,responsive:[{breakpoint:992,settings:{slidesToShow:2,slidesToScroll:1}},{breakpoint:768,settings:{slidesToShow:1,slidesToScroll:1}}]})}),e("#contactForm").on("submit",function(e){e.preventDefault()}),e(".up").on("click",function(){window.scrollTo({top:0,behavior:"smooth"})})}(jQuery),$(function(){$(window).scroll(function(){var e=$(window).scrollTop();100<e?$(".up").removeClass("d-none"):$(".up").addClass("d-none"),100<e?$("nav").addClass("navShadow"):$("nav").removeClass("navShadow"),100<e?$("ul").css("top","82px"):$("ul").css("top","92px")}),$(".logo").on("click",function(){$("html,body").animate({scrollTop:0},500)}),$("#menu-toggle").on("click",function(){$("#menu-toggle").toggleClass("closeMenu"),$("ul").toggleClass("showMenu"),$("li").on("click",function(){$("ul").removeClass("showMenu"),$("#menu-toggle").removeClass("closeMenu")})})}),$(".nav-menu__link").on("click",function(e){e.preventDefault();var o=$($(this).attr("href"))[0].offsetTop;window.scrollTo({top:o,behavior:"smooth"})});var menu_selector=".menu";function onScroll(){var l=$(document).scrollTop();$(menu_selector+" a").each(function(){var e=$(this).attr("href"),o=$(e);o.position().top<=l&&o.position().top+o.outerHeight()>l?($(menu_selector+" a.active").removeClass("active"),$(this).addClass("active")):$(this).removeClass("active")})}$(document).ready(function(){$(document).on("scroll",onScroll),$("a[href^=#]").click(function(e){e.preventDefault(),$(document).off("scroll"),$(menu_selector+" a.active").removeClass("active"),$(this).addClass("active");var o=$(this).attr("href"),l=$(o);$("html, body").animate({scrollTop:l.offset().top},500,function(){window.location.hash=o,$(document).on("scroll",onScroll)})})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
